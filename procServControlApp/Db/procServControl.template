# % macro, P, Device prefix
# % macro, PORT, Asyn port name
# % macro, SHOWOUT, Set this to 0 to disable the IOC output display
# % macro, MANUALSTART, Set this to # if the IOC is manually started. This changes the severity of STATUS
# % macro, DESCRIPTION, User-friendly description

record(stringin, "$(P):IOCNAME") {
  field(DESC, "IOC Name")
}

record(stringin, "$(P):DESCRIPTION") {
  field(DESC, "User-friendly description")
  field(PINI, "YES")
  field(VAL, "$(DESCRIPTION=$(P))")
}

record(bi, "$(P):AUTORESTART") {
  field(DESC, "Autorestart readback")
  field(ZNAM, "Off")
  field(ONAM, "On")
}

record(bo, "$(P):SHOWOUT") {
  field(DESC, "Show IOC output")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(VAL, "$(SHOWOUT=1)")
  field(PINI, "YES")
}

record(mbbi, "$(P):STATUS") {
  field(DESC, "Process status")
  field(ZRST, "Running")
  field(ONST, "Shutdown")
  field(TWST, "procServ Stopped")
  field(THST, "Invalid portname")  
$(MANUALSTART=)  field(ONSV, "MAJOR")
  field(TWSV, "MAJOR")
  field(THSV, "MAJOR")  
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")  
}

record(busy, "$(P):TOGGLE") {
  field(DESC, "Autorestart toggle")
}

record(busy, "$(P):START") {
  field(DESC, "Start IOC")
}

record(busy, "$(P):STOP") {
  field(DESC, "Stop IOC")
}

record(busy, "$(P):RESTART") {
  field(DESC, "Restart IOC")
}

record(waveform, "$(P):IOCOUT") {
    field(DESC, "Last 20 lines of IOC output")
    field(NELM, "5120")
    field(FTVL, "UCHAR")
}

record(stringin, "$(P):PORT") {
  field(DESC, "conserver/procServ IOC name")
  field(VAL, "$(PORT)")
  field(PINI, "YES")
}

